{
  "name": "node_inversify",
  "version": "1.0.0",
  "description": "",
  "main": "index.ts",
  "scripts": {
    "prettier:lint": "./node_modules/.bin/prettier -l \\\"./src/**/*.{js,jsx,css,json,scss,ts,css,sass,less}\\\"",
    "format": "npm run prettier -- --write",
    "lint": "./node_modules/.bin/eslint ./src/**/*.{js,ts};",
    "lint:fix": "./node_modules/.bin/eslint --fix ./src/**/*.{js,ts}; exit 0",
    "validate": "npm run prettier -- && npm run lint:fix",
    "prettier": "./node_modules/.bin/prettier --write src/**/*.{js,jsx,css,json,scss,ts,css,sass,less}",
    "prettier:format": "./node_modules/.bin/prettier --config .prettierrc 'src/**/*.ts' --write",
    "prettier:watch": "onchange 'src/**/*.ts' -- prettier --write {{changed}}",
    "test": "./node_modules/.bin/jest  --verbose --coverage --updateSnapshot --notify",
    "test:watch": "./node_modules/.bin/jest --watchAll --notify='true' --verbose --coverage --updateSnapshot",
    "prettier:check": "./node_modules/.bin/prettier -l \\\"src/**/*.{js,jsx,css,json,scss,ts,css,sass,less}\\\"",
    "test-staged": "./node_modules/.bin/jest  --verbose --coverage --updateSnapshot --notify --findRelatedTests",
    "release": "standard-version",
    "lint-staged": "./node_modules/.bin/lint-staged",
    "docker:start": "npm run scripts:firebase-to-env && ./scripts/init.sh && npm run db:generate-database-script && docker-compose up -d --build",
    "docker:logs": "docker-compose logs -f",
    "docker:watch": "npm run docker:start && npm run docker:logs",
    "docker:stop": "docker-compose stop",
    "docker:down": "docker-compose down -v",
    "docker:test-watch": "./scripts/test-watch.sh",
    "docker:test": "./scripts/test.sh",
    "docker:test-staged": "./scripts/test-staged.sh",
    "docker:reset-env": "./scripts/rest_docker_env.sh",
    "docker:typeorm-generate": "./scripts/typeorm/typeorm-generate.sh || exit 0",
    "docker:typeorm-create": "./scripts/typeorm/typeorm-create.sh",
    "docker:typeorm-run": "./scripts/typeorm/typeorm-run.sh",
    "docker:typeorm-show": "./scripts/typeorm/typeorm-show.sh || true",
    "docker:typeorm-revert": "./scripts/typeorm/typeorm-revert.sh",
    "docker:typeorm-cache-clear": "./scripts/typeorm/typeorm-cache-clear.sh",
    "docker:typeorm-entity": "./scripts/typeorm/typeorm-entity.sh",
    "docker:typeorm-subscriber": "./scripts/typeorm/typeorm-subscriber.sh",
    "db:reset": "./scripts/db_reset.sh",
    "db:create-database": "./scripts/create_db_mysql.sh",
    "db:generate-database-script": "./scripts/generate_db.sh",
    "start": "ts-node src/index.ts",
    "start:watch": "./node_modules/.bin/nodemon ./src/index.ts",
    "typeorm": "./node_modules/.bin/ts-node ./node_modules/.bin/typeorm -f ormconfig.cli.ts",
    "typeorm:generate": "npm run typeorm migration:generate -- -n",
    "typeorm:create": "npm run typeorm migration:create -- -n",
    "typeorm:run": "npm run typeorm migration:run",
    "typeorm:show": "npm run typeorm migration:show",
    "typeorm:revert": "npm run typeorm migration:revert",
    "typeorm:cache-clear": "npm run typeorm cache:clear",
    "typeorm:entity": "npm run typeorm entity:create -- -n",
    "typeorm:subscriber": "npm run typeorm subscriber:create -- -n",
    "todo": "./scripts/todo.sh",
    "scripts:permissions": "sudo chmod +x ./scripts/* || true && ls -la ./scripts && sudo chown -R $USER:$USER ./data || true && sudo chown -R $USER:$USER coverage || true && sudo chown -R $USER:$USER ./node_modules || true && sudo chown -R $USER:$USER ormlogs.log || true",
    "scripts:firebase-to-env": "./scripts/firebase_to_env_if_not_exists.sh",
    "scripts:force-firebase-to-env": "./scripts/force_firebase_to_env.sh",
    "scripts:compare-firebase-and-env": "./scripts/compare_env_from_firebase_to_local.sh",
    "scripts:generate-session-tokens": "./scripts/generate_session_token.sh",
    "todo:file": "./scripts/todo.sh > todo.md",
    "generate_env_example": "./scripts/generate_env_example.sh"
  },
  "nodemonConfig": {
    "ignore": [
      "**/*.test.ts",
      "**/*.spec.ts",
      ".git",
      "./node_modules",
      "./data",
      "./src/data",
      "./src/node_modules"
    ],
    "watch": [
      "src"
    ],
    "exec": "npm start",
    "ext": "ts"
  },
  "author": "",
  "license": "ISC",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "npx hge-commit"
    }
  },
  "lint-staged": {
    "**/*.{jsx,js,ts,css,sass,less,scss,vue}": [
      "npm run format",
      "npm run lint:fix",
      "npm run todo:file",
      "npm run docker:test-staged",
      "npm run generate_env_example",
      "git add ."
    ],
    "**/*.{md,yml,yaml,json}": [
      "npm run format",
      "npm run lint:fix",
      "npm run todo:file",
      "npm run generate_env_example",
      "git add ."
    ],
    "**/*.sh": [
      "npm run todo:file",
      "npm run generate_env_example",
      "git add ."
    ]
  },
  "dependencies": {
    "body-parser": "^1.19.0",
    "commitizen": "^4.2.2",
    "cookie-session": "^1.4.0",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "inversify": "^5.0.1",
    "inversify-binding-decorators": "^4.0.0",
    "inversify-express-utils": "^6.3.2",
    "inversify-logger-middleware": "^3.1.0",
    "mysql2": "^2.2.5",
    "passport": "^0.4.1",
    "passport-github": "^1.1.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth2": "^0.2.0",
    "passport-slack": "0.0.7",
    "passport-slack-oauth2": "^1.0.2",
    "reflect-metadata": "^0.1.10",
    "typeorm": "0.2.29"
  },
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@types/body-parser": "^1.19.0",
    "@types/express": "^4.17.8",
    "@types/node": "^8.0.29",
    "cz-conventional-changelog": "^3.3.0",
    "husky": "^4.3.0",
    "husky-git-emoji": "^1.0.1",
    "jest": "^26.6.2",
    "lint-staged": "^10.5.1",
    "nodemon": "^2.0.6",
    "prettier": "^1.19.1",
    "standard-version": "^9.0.0",
    "ts-jest": "^26.4.3",
    "ts-node": "3.3.0",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.9.7"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
